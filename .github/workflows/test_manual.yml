name: Run Booking Bot

on:
  workflow_dispatch:  # Allow manual triggers
  schedule:
    - cron: "0 19 * * 0"  # Run at 19:00 UTC (20:00 BST) every Sunday

jobs:
  booking:
    runs-on: ubuntu-latest

    env:
      EMAIL: ${{ secrets.EMAIL }}
      PASSWORD: ${{ secrets.PASSWORD }}

    steps:
      # --- STEP 1: Checkout Repository ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- STEP 2: Set Up Python ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # --- STEP 3: Install Google Chrome ---
      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # --- STEP 4: Install Python Dependencies ---
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager python-dotenv tenacity

      # --- STEP 5: Debug Secrets ---
      - name: Debug Secrets
        run: |
          if [ -z "$EMAIL" ]; then
            echo "::error::EMAIL is not set!"
            exit 1
          fi
          if [ -z "$PASSWORD" ]; then
            echo "::error::PASSWORD is not set!"
            exit 1
          fi
          echo "[DEBUG] EMAIL and PASSWORD are set (hidden)."

      # --- STEP 6: Run Booking Bot with Retries ---
      - name: Run booking bot
        run: |
          mkdir -p screenshots logs
          python booking_bot.py 2>&1 | tee booking_bot.log || echo "Booking bot failed."
        continue-on-error: true

      # --- STEP 7: Upload Screenshots ---
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: booking-screenshots
          path: screenshots/
          if-no-files-found: warn

      # --- STEP 8: Upload Logs ---
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: booking-logs
          path: |
            booking_bot.log
            logs/
          if-no-files-found: warn

      # --- STEP 9: Notify on Failure ---
      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: 'your-channel-id'
          text: 'Booking Bot failed! Check logs and screenshots for details.'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
